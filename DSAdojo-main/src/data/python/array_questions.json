[
  {
    "id": "array-easy-q1",
    "type": "multiple-choice",
    "question": "What is the index of the first element in an array?",
    "options": [
      "0",
      "1",
      "-1",
      "undefined"
    ],
    "correctAnswer": 0,
    "explanation": "Arrays are zero-indexed."
  },
  {
    "id": "array-easy-q2",
    "type": "multiple-choice",
    "question": "How do you find the length of an array `arr` in Python?",
    "options": [
      "len(arr)",
      "arr.length",
      "arr.size()",
      "length(arr)"
    ],
    "correctAnswer": 0,
    "explanation": "Use len(arr) in Python."
  },
  {
    "id": "array-easy-q3",
    "type": "multiple-choice",
    "question": "Which method adds an item to the end of a Python list?",
    "options": [
      "append()",
      "add()",
      "insert()",
      "extend()"
    ],
    "correctAnswer": 0,
    "explanation": "append() adds to the end of a list."
  },
  {
    "id": "array-easy-q4",
    "type": "multiple-choice",
    "question": "What will `arr[3]` return if arr = [1, 2, 3]?",
    "options": [
      "Error",
      "3",
      "2",
      "None"
    ],
    "correctAnswer": 0,
    "explanation": "Index 3 is out of bounds for array of size 3."
  },
  {
    "id": "array-easy-q5",
    "type": "multiple-choice",
    "question": "How do you access the first element of an array `arr`?",
    "options": [
      "arr[0]",
      "arr[1]",
      "arr.first()",
      "arr[-1]"
    ],
    "correctAnswer": 0,
    "explanation": "Index 0 gives the first element."
  },
  {
    "id": "array-easy-q6",
    "type": "multiple-choice",
    "question": "Which function sorts an array in ascending order?",
    "options": [
      "sort()",
      "reverse()",
      "shuffle()",
      "flip()"
    ],
    "correctAnswer": 0,
    "explanation": "sort() arranges elements ascendingly."
  },
  {
    "id": "array-easy-q7",
    "type": "multiple-choice",
    "question": "Which index represents the last element of array `arr`?",
    "options": [
      "len(arr)-1",
      "0",
      "-1",
      "arr.length"
    ],
    "correctAnswer": 0,
    "explanation": "Last index is len(arr)-1."
  },
  {
    "id": "array-easy-q8",
    "type": "multiple-choice",
    "question": "What is the output of `[1,2] + [3,4]`?",
    "options": [
      "[1,2,3,4]",
      "[4,5]",
      "[1,2][3,4]",
      "Error"
    ],
    "correctAnswer": 0,
    "explanation": "Lists get concatenated."
  },
  {
    "id": "array-easy-q9",
    "type": "multiple-choice",
    "question": "How to insert 5 at the 2nd position in `arr`?",
    "options": [
      "arr.insert(1, 5)",
      "arr[1] = 5",
      "arr.append(5)",
      "arr.push(5)"
    ],
    "correctAnswer": 0,
    "explanation": "insert(index, value) adds at position."
  },
  {
    "id": "array-easy-q10",
    "type": "multiple-choice",
    "question": "Which of the following is an immutable array?",
    "options": [
      "tuple",
      "list",
      "array",
      "dict"
    ],
    "correctAnswer": 0,
    "explanation": "tuple is immutable."
  },
  {
    "id": "array-medium-q1",
    "type": "multiple-choice",
    "question": "How do you reverse an array in Python?",
    "options": [
      "arr.reverse()",
      "arr = arr[::-1]",
      "reversed(arr)",
      "All of these"
    ],
    "correctAnswer": 3,
    "explanation": "All are valid ways to reverse."
  },
  {
    "id": "array-medium-q2",
    "type": "multiple-choice",
    "question": "What does `arr.pop(1)` do?",
    "options": [
      "Removes element at index 1",
      "Adds element",
      "Clears list",
      "Raises error"
    ],
    "correctAnswer": 0,
    "explanation": "pop(index) removes and returns element."
  },
  {
    "id": "array-medium-q3",
    "type": "multiple-choice",
    "question": "How to copy an array `arr` to `brr`?",
    "options": [
      "brr = arr[:]",
      "brr = arr",
      "brr = arr.copy()",
      "Both a and c"
    ],
    "correctAnswer": 3,
    "explanation": "Shallow copy uses slice or .copy()."
  },
  {
    "id": "array-medium-q4",
    "type": "multiple-choice",
    "question": "Which is NOT a valid array method?",
    "options": [
      "append()",
      "insert()",
      "push()",
      "pop()"
    ],
    "correctAnswer": 2,
    "explanation": "push() is for stacks, not Python lists."
  },
  {
    "id": "array-medium-q5",
    "type": "multiple-choice",
    "question": "What is the output of `sum([1, 2, 3])`?",
    "options": [
      "6",
      "123",
      "Error",
      "None"
    ],
    "correctAnswer": 0,
    "explanation": "sum() adds numeric elements."
  },
  {
    "id": "array-medium-q6",
    "type": "multiple-choice",
    "question": "`arr = [1]*3` gives?",
    "options": [
      "[1, 1, 1]",
      "[3]",
      "[1, 3]",
      "[1]*3"
    ],
    "correctAnswer": 0,
    "explanation": "It creates a list with repeated values."
  },
  {
    "id": "array-medium-q7",
    "type": "multiple-choice",
    "question": "How to remove all elements from list?",
    "options": [
      "arr.clear()",
      "arr = []",
      "del arr[:]",
      "All of these"
    ],
    "correctAnswer": 3,
    "explanation": "All clear the list."
  },
  {
    "id": "array-medium-q8",
    "type": "multiple-choice",
    "question": "What does `arr.index(3)` return?",
    "options": [
      "Index of 3",
      "Value 3",
      "Boolean",
      "None"
    ],
    "correctAnswer": 0,
    "explanation": "index(value) returns its index."
  },
  {
    "id": "array-medium-q9",
    "type": "multiple-choice",
    "question": "`arr.count(2)` gives?",
    "options": [
      "No. of times 2 appears",
      "Index of 2",
      "2",
      "Error"
    ],
    "correctAnswer": 0,
    "explanation": "count() counts occurrences."
  },
  {
    "id": "array-medium-q10",
    "type": "multiple-choice",
    "question": "What is the time complexity of accessing element in array?",
    "options": [
      "O(1)",
      "O(n)",
      "O(log n)",
      "O(n log n)"
    ],
    "correctAnswer": 0,
    "explanation": "Direct access is O(1)."
  },
  {
    "id": "array-hard-q1",
    "type": "multiple-choice",
    "question": "What is the best way to remove duplicates from an array?",
    "options": [
      "Convert to set",
      "Loop and remove",
      "Sort and check",
      "Use map"
    ],
    "correctAnswer": 0,
    "explanation": "set removes duplicates."
  },
  {
    "id": "array-hard-q2",
    "type": "multiple-choice",
    "question": "Which data structure is used for sparse arrays?",
    "options": [
      "Dictionary",
      "List",
      "Set",
      "Tuple"
    ],
    "correctAnswer": 0,
    "explanation": "Dicts help represent sparse arrays."
  },
  {
    "id": "array-hard-q3",
    "type": "multiple-choice",
    "question": "How to rotate an array left by 1?",
    "options": [
      "arr.append(arr.pop(0))",
      "arr = arr[1:] + arr[:1]",
      "Both a and b",
      "None"
    ],
    "correctAnswer": 2,
    "explanation": "Both are valid rotations."
  },
  {
    "id": "array-hard-q4",
    "type": "multiple-choice",
    "question": "What is sliding window used for?",
    "options": [
      "Subarray problems",
      "Sort array",
      "Find min",
      "Add arrays"
    ],
    "correctAnswer": 0,
    "explanation": "It handles subarray/window based problems."
  },
  {
    "id": "array-hard-q5",
    "type": "multiple-choice",
    "question": "Which algorithm helps find max sum subarray?",
    "options": [
      "Kadane's",
      "Kruskal's",
      "Prim's",
      "Dijkstra's"
    ],
    "correctAnswer": 0,
    "explanation": "Kadane's handles max subarray sum."
  },
  {
    "id": "array-hard-q6",
    "type": "multiple-choice",
    "question": "Which function returns array of indices sorted by values?",
    "options": [
      "argsort",
      "sort",
      "order",
      "rank"
    ],
    "correctAnswer": 0,
    "explanation": "argsort returns sorted indices."
  },
  {
    "id": "array-hard-q7",
    "type": "multiple-choice",
    "question": "What is space complexity of array reversal?",
    "options": [
      "O(1)",
      "O(n)",
      "O(n log n)",
      "O(n^2)"
    ],
    "correctAnswer": 0,
    "explanation": "In-place reversal takes O(1)."
  },
  {
    "id": "array-hard-q8",
    "type": "multiple-choice",
    "question": "How many subarrays in array of size n?",
    "options": [
      "n(n+1)/2",
      "n^2",
      "2^n",
      "n!"
    ],
    "correctAnswer": 0,
    "explanation": "Subarrays = n(n+1)/2."
  },
  {
    "id": "array-hard-q9",
    "type": "multiple-choice",
    "question": "Which algorithm reduces large input range in arrays?",
    "options": [
      "Coordinate Compression",
      "Binary Search",
      "Heap Sort",
      "BFS"
    ],
    "correctAnswer": 0,
    "explanation": "Compression helps map large to small range."
  },
  {
    "id": "array-hard-q10",
    "type": "multiple-choice",
    "question": "Which of these uses prefix sum idea?",
    "options": [
      "Range sum query",
      "Sorting",
      "Heap",
      "Graph traversal"
    ],
    "correctAnswer": 0,
    "explanation": "Prefix sum helps in range queries."
  }
]